
(function(window,document,Laya){
	var __un=Laya.un,__uns=Laya.uns,__static=Laya.static,__class=Laya.class,__getset=Laya.getset,__newvec=Laya.__newvec;

	var Browser=laya.utils.Browser,Event=laya.events.Event,Handler=laya.utils.Handler,Label=laya.ui.Label;
	var Loader=laya.net.Loader,ObjectUtils=laya.utils.ObjectUtils,Sprite=laya.display.Sprite,Stage=laya.display.Stage;
	var Text=laya.display.Text,URL=laya.net.URL,View=laya.ui.View,WebGL=laya.webgl.WebGL;
//class consts.Predef
var Predef=(function(){
	function Predef(){
		;
	}

	__class(Predef,'consts.Predef');
	__getset(1,Predef,'isDebugMode',function(){
		return consts.Predef.pf=="pf_yile"||consts.Predef.forceDebug;
	});

	Predef.syncParams=function(launchConfig){
		consts.Predef.loadingLang=launchConfig.loadingLang;
		ObjectUtils.coverBySameKey(Predef,launchConfig.configVersion,true);
		ObjectUtils.coverBySameKey(Predef,launchConfig.configSys,true);
		ObjectUtils.coverBySameKey(Predef,launchConfig.testParams,true);
		if(consts.Predef.isDebugMode){
			var params=URL.getUrlVars();
			if(params){
				ObjectUtils.coverBySameKey(Predef,params,true);
			}
		}
	}

	Predef.font="";
	Predef.isWebGame=false;
	Predef.basePath="";
	Predef.isMiniGame=false;
	Predef.pf="";
	Predef.buildVersion="";
	Predef.loadingLang=null;
	Predef.forceDebug=false;
	return Predef;
})()


//class GameLoading
var GameLoading=(function(){
	function GameLoading(){
		;
	}

	__class(GameLoading,'GameLoading');
	var __proto=GameLoading.prototype;
	//用最简形式限时的loading界面 以加载游戏运行具备的最基本资源
	__proto.loadMain=function(launchConfig){
		Predef.syncParams(launchConfig);
		Loader.buildVersion=Predef.buildVersion;
		Text.defaultFont=Predef.font;
		Browser.__init__();
		if(Predef.isWebGame){
			Laya.init(2054,1081,WebGL);
			Laya.stage.scaleMode="showall";
			Laya.stage.screenMode="none";
		}
		else{
			Laya.init(640,1138,WebGL);
			if(Browser.clientHeight/Browser.clientWidth<1138/640){
				Laya.stage.scaleMode="exactfit";
			}
			else{
				Laya.stage.scaleMode="fixedwidth";
			}
			Laya.stage.screenMode="vertical";
		}
		Laya.stage.frameRate="fast";
		Laya.stage.bgColor="#000000";
		Laya.stage.alignH="center";
		Laya.stage.alignV="middle";
		if(Predef.basePath){
			URL.rootPath=URL.basePath=Predef.basePath;
		}
		this.loadGame();
	}

	__proto.loadGame=function(){
		var _$this=this;
		LoadingPanel.getInstance().show();
		var loadGameScript=function (){
			if(Predef.isDebugMode){
				var document=Browser.document;
				var script=document.createElement("script");
				script.src=URL.basePath+"js/GameMain.js";
				script.type="text/javascript";
				script.onload=function (){
					_$this.onGameLoaded();
					LoadingPanel.getInstance().hide();
				};
				document.body.appendChild(script);
				Loader.clearRes("js/GameMain.js");
			}
			else{
				_$this.onGameLoaded();
				LoadingPanel.getInstance().hide();
			}
		};
		var loadServerScript=function (){
			if(Predef.isDebugMode){
				var document=Browser.document;
				var script=document.createElement("script");
				script.src=URL.basePath+"js/ServerFunction.js";
				script.type="text/javascript";
				script.onload=function (){
					loadGameScript();
				};
				document.body.appendChild(script);
				Loader.clearRes("js/ServerFunction.js");
			}
			else{
				loadGameScript();
			}
		};
		var complete_step_1=function (){
			if(!Predef.isMiniGame&&!Predef.isDebugMode){
				var appendUrls=[];
				appendUrls.push({url:"loading_bg.png",type:"arraybuffer",size:100});
				LoadingPanel.getInstance().appendUrls(appendUrls,0.1);
			}
		};
		var urls=[];
		if(Predef.isDebugMode){
			urls.push({url:"js/GameMain.js",type:"text",size:100});
			urls.push({url:"js/ServerFunction.js",type:"text",size:100});
		}
		if(!Predef.isDebugMode){
			urls.push({url:"loading_bar_1.png",type:"arraybuffer",size:100});
			urls.push({url:"loading_bar_2.png",type:"arraybuffer",size:100});
			urls.push({url:"loading_bar_3.png",type:"arraybuffer",size:100});
			urls.push({url:"loading_bar_4.png",type:"arraybuffer",size:100});
		}
		LoadingPanel.getInstance().appendUrls(urls,0.4,complete_step_1);
		LoadingPanel.getInstance().startLoad(loadServerScript);
	}

	__proto.onGameLoaded=function(){
		onGameLoaded();
	}

	return GameLoading;
})()


//class uiLogic.LoadingPanel extends laya.display.Sprite
var LoadingPanel=(function(_super){
	function LoadingPanel(){
		this.view=null;
		this.list=null;
		this.loadComplete=null;
		this.isLoading=false;
		this.totalPercent=NaN;
		LoadingPanel.__super.call(this);
		this.isLoading=false;
		this.mouseEnabled=true;
		if(LoadingPanel.instance){
			throw new Error("LOADING只能通过getInstance获取实例");
		}
		this.list=[];
		this.totalPercent=0;
		this.view=new LoadingPanelUI();
		this.addChild(this.view);
	}

	__class(LoadingPanel,'uiLogic.LoadingPanel',_super);
	var __proto=LoadingPanel.prototype;
	__proto.show=function(){
		if(this.parent!=null)return;
		Laya.loader.on("error",this,this.resLoadError);
		Laya.stage.addChild(this);
		Laya.stage.on("resize",this,this.onScreenResize);
		this.onScreenResize();
		this.resLoadProgress(0,0);
	}

	__proto.hide=function(){
		if(this.parent==null)return;
		Laya.loader.off("error",this,this.resLoadError);
		this.removeSelf();
		Laya.stage.off("resize",this,this.onScreenResize);
	}

	__proto.startLoad=function(loadComplete){
		if(this.isLoading){
			return;
		}
		this.totalPercent=0;
		this.isLoading=true;
		this.loadComplete=loadComplete;
		this.loadNext();
	}

	__proto.appendUrls=function(urls,maxPercent,complete){
		(maxPercent===void 0)&& (maxPercent=0);
		this.list.push({urls:urls,maxPercent:maxPercent,complete:complete});
	}

	__proto.loadNext=function(complete,maxPercent){
		(maxPercent===void 0)&& (maxPercent=0);
		if(complete){
			complete();
		}
		this.totalPercent+=maxPercent;
		if(this.list.length>0){
			var queueInfo=this.list.shift();
			var urls=queueInfo["urls"];
			var maxPercent=queueInfo["maxPercent"];
			var complete=queueInfo["complete"];
			if(urls.length>0){
				Laya.loader.load(urls,Handler.create(this,this.loadNext,[complete,maxPercent]),Handler.create(this,this.resLoadProgress,[maxPercent],false));
			}
			else{
				this.loadNext();
			}
		}
		else{
			this.resLoadComplete();
		}
	}

	__proto.resLoadError=function(){
		Laya.loader.off("error",this,this.resLoadError);
	}

	__proto.resLoadComplete=function(){
		this.isLoading=false;
		if(this.loadComplete){
			this.loadComplete();
			this.loadComplete=null;
		}
		this.totalPercent=0;
	}

	__proto.setTotalPercent=function(value){
		this.totalPercent=value;
	}

	__proto.setProgress=function(maxPercent,progress){
		this.resLoadProgress(maxPercent,progress);
	}

	__proto.resLoadProgress=function(maxPercent,progress){
		var percent=this.totalPercent+progress*maxPercent;
		var percentValue=Math.ceil(percent*100);
		this.view.labelPercent.text=Math.min(100,percentValue)+"%";
	}

	__proto.onScreenResize=function(){
		this.size(Laya.stage.width,Laya.stage.height);
		this.pos(0,0);
		this.view.size(this.width,this.height);
	}

	LoadingPanel.getInstance=function(){
		if(!LoadingPanel.instance){
			LoadingPanel.instance=new LoadingPanel();
		}
		return LoadingPanel.instance;
	}

	LoadingPanel.instance=null;
	return LoadingPanel;
})(Sprite)


//class ui.LoadingPanelUI extends laya.ui.View
var LoadingPanelUI=(function(_super){
	function LoadingPanelUI(){
		this.labelPercent=null;
		LoadingPanelUI.__super.call(this);
	}

	__class(LoadingPanelUI,'ui.LoadingPanelUI',_super);
	var __proto=LoadingPanelUI.prototype;
	__proto.createChildren=function(){
		laya.display.Scene.prototype.createChildren.call(this);
		this.createView(LoadingPanelUI.uiView);
	}

	LoadingPanelUI.uiView={"type":"View","props":{"width":640,"height":1280},"child":[{"type":"Box","props":{"width":640,"height":300,"centerY":0,"centerX":0},"child":[{"type":"Label","props":{"y":144,"var":"labelPercent","text":"0%","fontSize":38,"color":"#ffffff","centerY":0,"centerX":0}}]}]};
	return LoadingPanelUI;
})(View)



})(window,document,Laya);

if (typeof define === 'function' && define.amd){
	define('laya.core', ['require', "exports"], function(require, exports) {
        'use strict';
        Object.defineProperty(exports, '__esModule', { value: true });
        for (var i in Laya) {
			var o = Laya[i];
            o && o.__isclass && (exports[i] = o);
        }
    });
}